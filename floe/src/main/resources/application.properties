spring.application.name=floe

# Import .env file
spring.config.import=optional:file:.env[.properties]

spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#JPA log
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# JPA ??
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# MySQL
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQLDialect

# S3 Configuration
cloud.aws.credentials.accessKey=${AWS_ACCESS_KEY}
cloud.aws.credentials.secretKey=${AWS_SECRET_KEY}
cloud.aws.s3.bucketName=${AWS_S3_BUCKET_NAME}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.stack.auto=${AWS_STACK_AUTO}

# jwt
jwt.secretKey=${JWT_SECRET_KEY}
jwt.access.expiration=${JWT_ACCESS_EXPIRATION}
jwt.access.header=${JWT_ACCESS_HEADER}
jwt.refresh.expiration=${JWT_REFRESH_EXPIRATION}
jwt.refresh.header=${JWT_REFRESH_HEADER}

# OAuth2.0

#NAVER
##registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.redirect-uri=${NAVER_REDIRECT_URI}
spring.security.oauth2.client.registration.naver.authorization-grant-type=${NAVER_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.naver.scope=${NAVER_SCOPE}
spring.security.oauth2.client.provider.naver.authorization-uri=${NAVER_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.naver.token-uri=${NAVER_TOKEN_URI}
spring.security.oauth2.client.provider.naver.user-info-uri=${NAVER_USER_INFO_URI}
spring.security.oauth2.client.provider.naver.user-name-attribute=${NAVER_USER_NAME_ATTRIBUTE}

#KAKAO
##registartion
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=${KAKAO_REDIRECT_URI}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=${KAKAO_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.kakao.scope=${KAKAO_SCOPE}
##provider
spring.security.oauth2.client.provider.kakao.authorization-uri=${KAKAO_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.kakao.token-uri=${KAKAO_TOKEN_URI}
spring.security.oauth2.client.provider.kakao.user-info-uri=${KAKAO_USER_INFO_URI}
spring.security.oauth2.client.provider.kakao.user-name-attribute=${KAKAO_USER_NAME_ATTRIBUTE}

#GOOGLE
##registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI}
spring.security.oauth2.client.registration.google.authorization-grant-type=${GOOGLE_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}

#GITHUB
##registration
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
spring.security.oauth2.client.registration.github.redirect-uri=${GITHUB_REDIRECT_URI}
spring.security.oauth2.client.registration.github.authorization-grant-type=${GITHUB_AUTHORIZATION_GRANT_TYPE}
spring.security.oauth2.client.registration.github.scope=${GITHUB_SCOPE}
